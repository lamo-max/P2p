<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Messenger System</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #222;
      color: #f5f5f5;
      display: flex;
      flex-direction: column;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    #chatContainer {
      width: 90%;
      max-width: 700px;
      background: #333;
      padding: 15px;
      border-radius: 10px;
      display: none;
      flex-direction: column;
    }
    #messages {
      flex: 1;
      background: #111;
      padding: 10px;
      height: 400px;
      overflow-y: auto;
      border-radius: 6px;
      margin-bottom: 10px;
    }
    .msg {
      padding: 6px 10px;
      margin: 5px 0;
      border-radius: 5px;
    }
    .me { background: #27ae60; text-align: right; }
    .peer { background: #2980b9; text-align: left; }
    .system { background: #7f8c8d; text-align: center; }
    input, button {
      padding: 10px;
      border-radius: 6px;
      border: none;
      margin: 5px;
    }
    button { background: #e67e22; color: #fff; cursor: pointer; }
    button:hover { background: #d35400; }
  </style>
</head>
<body>
  <h2>üîê Messenger System</h2>
  <div id="login">
    <input type="text" id="roomKey" placeholder="Enter Room Key">
    <input type="text" id="username" placeholder="Enter Your Name">
    <button onclick="joinRoom()">Join</button>
  </div>

  <div id="chatContainer">
    <div id="messages"></div>
    <input type="text" id="msgInput" placeholder="Type a message...">
    <button onclick="sendMsg()">Send</button>
    <button onclick="clearChat()">Delete All</button>
  </div>

<script>
let ws, room, username;

function joinRoom() {
  room = document.getElementById("roomKey").value.trim();
  username = document.getElementById("username").value.trim();
  if (!room || !username) return alert("Enter both room key & name!");

  ws = new WebSocket("ws://localhost:8080");

  ws.onopen = () => {
    ws.send(JSON.stringify({ type: "join", room: room }));
    document.getElementById("login").style.display = "none";
    document.getElementById("chatContainer").style.display = "flex";
  };

  ws.onmessage = (event) => {
    const data = JSON.parse(event.data);
    if (data.type === "chat") {
      addMessage(data.msg, data.sender === username ? "me" : "peer", data.sender);
    }
    if (data.type === "system") {
      addMessage(data.msg, "system");
    }
    if (data.type === "clear") {
      document.getElementById("messages").innerHTML = "";
    }
  };
}

function sendMsg() {
  const msg = document.getElementById("msgInput").value.trim();
  if (!msg) return;
  ws.send(JSON.stringify({ type: "chat", msg: msg, sender: username }));
  document.getElementById("msgInput").value = "";
}

function addMessage(text, type, sender="") {
  const msgBox = document.createElement("div");
  msgBox.className = "msg " + type;
  msgBox.innerText = sender ? sender + ": " + text : text;
  document.getElementById("messages").appendChild(msgBox);
  document.getElementById("messages").scrollTop = document.getElementById("messages").scrollHeight;
}

function clearChat() {
  ws.send(JSON.stringify({ type: "clear" }));
}
</script>
</body>
</html>
